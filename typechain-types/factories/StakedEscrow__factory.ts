/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { StakedEscrow, StakedEscrowInterface } from "../StakedEscrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_escrowId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_escrowId",
        type: "uint256",
      },
    ],
    name: "EscrowCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_escrowId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_merchant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "EscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_escrowId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "TradeCompleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyerEscrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_escrowId",
        type: "uint256",
      },
    ],
    name: "cancelEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_escrowId",
        type: "uint256",
      },
    ],
    name: "completeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_details",
        type: "string",
      },
    ],
    name: "createEscrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_escrowId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "escrows",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "details",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isDead",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "complete",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
    ],
    name: "getBuyerEscrows",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_merchant",
        type: "address",
      },
    ],
    name: "getMerchantEscrows",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merchantEscrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEscrowId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600d60809081526c5374616b656420457363726f7760981b60a0526000906200002e9082620000ed565b5060006001553480156200004157600080fd5b50620001b9565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007357607f821691505b6020821081036200009457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000e857600081815260208120601f850160051c81016020861015620000c35750805b601f850160051c820191505b81811015620000e457828155600101620000cf565b5050505b505050565b81516001600160401b0381111562000109576200010962000048565b62000121816200011a84546200005e565b846200009a565b602080601f831160018114620001595760008415620001405750858301515b600019600386901b1c1916600185901b178555620000e4565b600085815260208120601f198616915b828110156200018a5788860151825594840194600190910190840162000169565b5085821015620001a95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61113880620001c96000396000f3fe60806040526004361061009c5760003560e01c806389cb29dd1161006457806389cb29dd1461016c578063ad22155114610182578063b26d3ff7146101a4578063b3f197d7146101c4578063b6b55f25146101e4578063e0182436146101f757600080fd5b8063012f52ee146100a157806306fdde03146100dc578063138fcf92146100fe57806328cea5991461011f57806370c951a51461014c575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610cd5565b610217565b6040516100d396959493929190610d34565b60405180910390f35b3480156100e857600080fd5b506100f16102e9565b6040516100d39190610d81565b61011161010c366004610db1565b610377565b6040519081526020016100d3565b34801561012b57600080fd5b5061013f61013a366004610e88565b610577565b6040516100d39190610ea3565b34801561015857600080fd5b50610111610167366004610ee7565b6105e3565b34801561017857600080fd5b5061011160015481565b34801561018e57600080fd5b506101a261019d366004610cd5565b610614565b005b3480156101b057600080fd5b506101116101bf366004610ee7565b61089a565b3480156101d057600080fd5b5061013f6101df366004610e88565b6108b6565b6101a26101f2366004610cd5565b610920565b34801561020357600080fd5b506101a2610212366004610cd5565b610a86565b600260208190526000918252604090912080546001820154928201546003830180546001600160a01b039384169590931693919261025490610f11565b80601f016020809104026020016040519081016040528092919081815260200182805461028090610f11565b80156102cd5780601f106102a2576101008083540402835291602001916102cd565b820191906000526020600020905b8154815290600101906020018083116102b057829003601f168201915b5050506004909301549192505060ff8082169161010090041686565b600080546102f690610f11565b80601f016020809104026020016040519081016040528092919081815260200182805461032290610f11565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b505050505081565b6000610384600484610f61565b156103d65760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e74206d7573742062652061206d756c7469706c65206f662034000060448201526064015b60405180910390fd5b6103e1600484610f8b565b341461043b5760405162461bcd60e51b815260206004820152602360248201527f4d757374206465706f73697420323525206f6620616d6f756e74206173207374604482015262616b6560e81b60648201526084016103cd565b600180546000918261044c83610f9f565b909155506040805160c08101825260008082523360208084019182528385018a8152606085018a81526080860185905260a0860185905287855260029283905295909320845181546001600160a01b03199081166001600160a01b03928316178355935160018301805490951691161790925591519181019190915591519293509160038201906104dd9082611007565b5060808201516004909101805460a09093015115156101000261ff00199215159290921661ffff1990931692909217179055336000818152600360209081526040808320805460018101825590845291909220018390555182907fd3a367dce916d996d5070b966e34d930be36eb1370f69f7d1a3d950eadda3cc6906105669088815260200190565b60405180910390a390505b92915050565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156105d757602002820191906000526020600020905b8154815260200190600101908083116105c3575b50505050509050919050565b600460205281600052604060002081815481106105ff57600080fd5b90600052602060002001600091509150505481565b6000818152600260205260409020600481015460ff16156106475760405162461bcd60e51b81526004016103cd906110c7565b80546001600160a01b031661068e5760405162461bcd60e51b815260206004820152600d60248201526c109d5e595c881b9bdd081cd95d609a1b60448201526064016103cd565b80546001600160a01b031633146106e75760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c792062757965722063616e20636f6d706c65746520747261646500000060448201526064016103cd565b6004818101805461ffff1916610101179055600282015460009161070a91610f8b565b826002015461071991906110ef565b604051909150339084907f426b87d30760ed04a097c0113c943b597a538ae1483a0386bca1ea9380947aa190600090a3815460028301546000916001600160a01b03169061076990600490610f8b565b604051600081818185875af1925050503d80600081146107a5576040519150601f19603f3d011682016040523d82523d6000602084013e6107aa565b606091505b50509050806107f35760405162461bcd60e51b8152602060048201526015602482015274109d5e595c88151c985b9cd9995c8819985a5b1959605a1b60448201526064016103cd565b60018301546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610842576040519150601f19603f3d011682016040523d82523d6000602084013e610847565b606091505b50509050806108935760405162461bcd60e51b815260206004820152601860248201527713595c98da185b9d08151c985b9cd9995c8819985a5b195960421b60448201526064016103cd565b5050505050565b600360205281600052604060002081815481106105ff57600080fd5b6001600160a01b0381166000908152600460209081526040918290208054835181840281018401909452808452606093928301828280156105d757602002820191906000526020600020908154815260200190600101908083116105c35750505050509050919050565b6000818152600260205260409020600481015460ff16156109535760405162461bcd60e51b81526004016103cd906110c7565b80546001600160a01b0316156109a45760405162461bcd60e51b81526020600482015260166024820152751048189d5e595c881a5cc8185b1c9958591e481cd95d60521b60448201526064016103cd565b600481600201546109b59190610f8b565b81600201546109c491906110ef565b3414610a125760405162461bcd60e51b815260206004820152601a60248201527f496e636f727265637420616d6f756e74206465706f736974656400000000000060448201526064016103cd565b80546001600160a01b0319163390811782556000818152600460209081526040808320805460018101825590845291909220018490555183907feaa18152488ce5959073c9c79c88ca90b3d96c00de1f118cfaad664c3dab06b990610a7a9034815260200190565b60405180910390a35050565b6000818152600260205260409020600481015460ff1615610ab95760405162461bcd60e51b81526004016103cd906110c7565b60018101546001600160a01b03163314610b155760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206d65726368616e742063616e2063616e63656c20657363726f770060448201526064016103cd565b6004808201805460ff191660011790556002820154600091610b3691610f8b565b8260020154610b4591906110ef565b60405190915083907f0d977c6b1a383ac5ce532b4a668d0ef9ad38478e1a5ff28abb221f4b682b264390600090a281546001600160a01b031615610c1f5781546040516000916001600160a01b03169083908381818185875af1925050503d8060008114610bcf576040519150601f19603f3d011682016040523d82523d6000602084013e610bd4565b606091505b5050905080610c1d5760405162461bcd60e51b8152602060048201526015602482015274109d5e595c88151c985b9cd9995c8819985a5b1959605a1b60448201526064016103cd565b505b600182015460028301546000916001600160a01b031690610c4290600490610f8b565b604051600081818185875af1925050503d8060008114610c7e576040519150601f19603f3d011682016040523d82523d6000602084013e610c83565b606091505b5050905080610ccf5760405162461bcd60e51b815260206004820152601860248201527713595c98da185b9d08151c985b9cd9995c8819985a5b195960421b60448201526064016103cd565b50505050565b600060208284031215610ce757600080fd5b5035919050565b6000815180845260005b81811015610d1457602081850181015186830182015201610cf8565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038781168252861660208201526040810185905260c060608201819052600090610d6790830186610cee565b93151560808301525090151560a090910152949350505050565b602081526000610d946020830184610cee565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610dc457600080fd5b82359150602083013567ffffffffffffffff80821115610de357600080fd5b818501915085601f830112610df757600080fd5b813581811115610e0957610e09610d9b565b604051601f8201601f19908116603f01168101908382118183101715610e3157610e31610d9b565b81604052828152886020848701011115610e4a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80356001600160a01b0381168114610e8357600080fd5b919050565b600060208284031215610e9a57600080fd5b610d9482610e6c565b6020808252825182820181905260009190848201906040850190845b81811015610edb57835183529284019291840191600101610ebf565b50909695505050505050565b60008060408385031215610efa57600080fd5b610f0383610e6c565b946020939093013593505050565b600181811c90821680610f2557607f821691505b602082108103610f4557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600082610f7057610f70610f4b565b500690565b634e487b7160e01b600052601160045260246000fd5b600082610f9a57610f9a610f4b565b500490565b600060018201610fb157610fb1610f75565b5060010190565b601f82111561100257600081815260208120601f850160051c81016020861015610fdf5750805b601f850160051c820191505b81811015610ffe57828155600101610feb565b5050505b505050565b815167ffffffffffffffff81111561102157611021610d9b565b6110358161102f8454610f11565b84610fb8565b602080601f83116001811461106a57600084156110525750858301515b600019600386901b1c1916600185901b178555610ffe565b600085815260208120601f198616915b828110156110995788860151825594840194600190910190840161107a565b50858210156110b75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252600e908201526d115cd8dc9bddc81a5cc81919585960921b604082015260600190565b8082018082111561057157610571610f7556fea2646970667358221220593f89572a7f7d51355373f76eca149e9dd698d67a4b63ce2b2b30b052f7300f64736f6c63430008120033";

type StakedEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakedEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakedEscrow__factory extends ContractFactory {
  constructor(...args: StakedEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StakedEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakedEscrow__factory {
    return super.connect(runner) as StakedEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakedEscrowInterface {
    return new Interface(_abi) as StakedEscrowInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StakedEscrow {
    return new Contract(address, _abi, runner) as unknown as StakedEscrow;
  }
}
